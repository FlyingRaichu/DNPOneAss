@page "/RegisterUser"
@using Domain.DTOs
@using HttpClients.ClientInterfaces
@inject IUserService userService;
@inject NavigationManager NavigationManager;
<h3>Register User</h3>

<div class="card">
    <div class="form-group field">
        <label>User name:</label>
        <input type="text" @bind="username" @bind:event="oninput"/>
        <br>
        <br>
        <label>Password:</label>
        <input type="text" @bind="password" @bind:event="oninput"/>
        <br>
        <br>
        <label>Email:</label>
        <input type="text" @bind="email" @bind:event="oninput"/>
        @if (!string.IsNullOrEmpty(resultMsg))
        {
            <label style="color: @color">@resultMsg</label>
        }
    </div>
    <div class="button-row">
        <button @onclick="Create" disabled="@(string.IsNullOrEmpty(username))" class="acceptbtn">Create</button>
    </div>
</div>

@code {
    private string username = "";
    private string password = "";
    private string email = "";
    private string resultMsg = "";
    private string color = "";

    private async Task Create()
    {
        resultMsg = "";

        try
        {
            await userService.CreateAsync(new UserCreationDto(username, password, email));
            username = "";
            password = "";
            email = "";
            resultMsg = "User successfully created";
            color = "green";
            
            NavigationManager.NavigateTo("./");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            resultMsg = e.Message;
            color = "red";
        }
    }

}